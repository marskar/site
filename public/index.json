[
  {
    "authors": null,
    "categories": null,
    "content": " In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n",
    "date": 1536465600,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1536465600,
    "objectID": "6a451186c775f5f0adb3a0416d0cb711",
    "permalink": "/tutorial/example/",
    "publishdate": "2018-09-09T00:00:00-04:00",
    "relpermalink": "/tutorial/example/",
    "section": "tutorial",
    "summary": "In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;",
    "tags": null,
    "title": "Example Page",
    "type": "docs"
  },
  {
    "authors": [],
    "categories": null,
    "content": "Click on the Slides button above to view the built-in slides feature.\n Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n",
    "date": 1483246800,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1483246800,
    "objectID": "96344c08df50a1b693cc40432115cbe3",
    "permalink": "/talk/example/",
    "publishdate": "2017-01-01T00:00:00-05:00",
    "relpermalink": "/talk/example/",
    "section": "talk",
    "summary": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam.",
    "tags": [],
    "title": "Example Talk",
    "type": "talk"
  },
  {
    "authors": null,
    "categories": null,
    "content": "",
    "date": 1461729600,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1461729600,
    "objectID": "d1311ddf745551c9e117aa4bb7e28516",
    "permalink": "/project/external-project/",
    "publishdate": "2016-04-27T00:00:00-04:00",
    "relpermalink": "/project/external-project/",
    "section": "project",
    "summary": "An example of linking directly to an external project website using `external_link`.",
    "tags": [
      "Demo"
    ],
    "title": "External Project",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n",
    "date": 1461729600,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1461729600,
    "objectID": "8f66d660a9a2edc2d08e68cc30f701f7",
    "permalink": "/project/internal-project/",
    "publishdate": "2016-04-27T00:00:00-04:00",
    "relpermalink": "/project/internal-project/",
    "section": "project",
    "summary": "An example of using the in-built project page.",
    "tags": [
      "Deep Learning"
    ],
    "title": "Internal Project",
    "type": "project"
  },
  {
    "authors": [
      "Martin Skarzynski"
    ],
    "categories": null,
    "content": " Host your HTML slides on GitHub pages The goal of this tutorial is to demonstrate how to make HTML slidedecks that can be put on the web.\nInstructions for how to turn Markdown (.md), R Markdown (.Rmd), and Jupyter Notebook (.ipynb) files into slides are detailed below.\nOne major advantage of HTML slidedecks is that you can host them on GitHub for free and share a url, instead of resorting to email or transferring files using USB drives.\nInstead of using Powerpoint, Keynote, or Google Slides, I recommend you try to generate slides programmatically using the steps below.\nSpeaking of Powerpoint, I suggest that you avoid the horrors of Microsoft Office entirely. - Instead of using Microsoft Word \u0026amp; Powerpoint and the doc(x) \u0026amp; ppt(x) formats, write documents and slideshows in Markdown format and then converted into the desired output format using one of the three options below: 1. Pandoc or Pypandoc (recommended for users of the Python programming language and those comfortable using the command line) 2. RStudio or the rmarkdown R package (recommended for users of the R programming language) 3. JupyterLab (or the classic Jupyter Notebook) - Instead of using Microsoft Excel and the xls(x) format, save tabular data as comma-separated value (csv) files. PyCharm, RStudio and JupyterLab all have csv viewers. These csv viewers are better options for looking at data than Excel, because they do not have the ability to edit or auto-format your raw data. Tables that are meant to be displayed in documents can also be written in Markdown format instead of in Excel.\nCreate HTML slides from markdown (md) using Pandoc or Pypandoc The easiest way to create a slideshow is to write a simple markdown file, like habits.md, and use Pandoc to convert it to one of the possible HTML formats.\nThere are many ways to install Pandoc, but I recommend to use Anaconda or Miniconda. The Anaconda installer is hundreds of MB in size because the Anaconda Python distribution includes hundreds of Python packages plus the Anaconda Navigator program. The Miniconda installer is more than ten times smaller and includes only Python and conda.\nOnce you have Anaconda or Miniconda installed, you can install Pandoc using this command-line command conda install -yc conda-forge pandoc and then run the one of the options below:\npandoc -t dzslides --self-contained -s habits.md -o pandoc/dzslides-pandoc.html pandoc -t slidy --self-contained -s habits.md -o pandoc/slidy-pandoc.html  Instead of using Pandoc in the terminal as described above, you can also install Pypandoc and convert Markdown to almost any format in your Python environment (e.g. in PyCharm)!\n Pro-tip 1: You can write Markdown in PyCharm! Press Ctrl/Cmd+N, then Enter, type out the name of the Markdown file (must end in .md) you want to create, and press Enter again. You get Markdown syntax highlighting and a live preview of your rendered Markdown! Pro-tip 2: If you create a new Python scratch file in PyCharm (Press Ctrl/Cmd+Shift+N, then Enter) and change the extension from .py to .md, PyCharm will continue to treat the file like a Python script giving you the ability to run code in your Markdown document! As soon as you take the file out of the Scratches folder, PyCharm will treat it like a Markdown file again! In short, PyCharm will auto-detect the file type based on its extension, but this does not apply to scratch files! Pro-tip 3: To get automatic python syntax highlighting in your Markdown documents on GitHub and in slideshows created from Markdown files, put three backticks (`) followed by the word \u0026ldquo;python\u0026rdquo; above your code and then a new line below your code put another three backticks (`). This is called a code block in Markdown.  Examples of HTML slides created using Pandoc or Pypandoc:  dzslides slidy  Knit slides from md or Rmd to HTML in RStudio or from the command-line First, you will need to install R. Again, I recommend installing Anaconda or Miniconda and then running conda install -yc r r-essentials.\nThen, write you can run one of the commands below to make the html slideshow.\nRscript -e \u0026quot;rmarkdown::render('habits.md', 'ioslides_presentation', 'r/ioslides-r.html')\u0026quot; Rscript -e \u0026quot;rmarkdown::render('habits.md', 'slidy_presentation', 'r/slidy-r.html')\u0026quot;  You can also install RStudio by running conda install -yc r rstudio, open up a markdown file in RStudio, add a YAML header that specifies the output_format as in habits.Rmd, save the file and then click Preview/Knit or Press Ctrl/Cmd + Shift + K.\nFor revealjs and xaringan slides, you must first run install.packages('revealjs') and install.packages('xaringan') in RStudio before you can Knit (Ctrl/Cmd + Shift + K).\nYou only need to install the packages once!\nYou can also run install the packages and render slides from the command-line as below:\nRscript -e \u0026quot;install.packages('revealjs', repos='http://cran.us.r-project.org')\u0026quot; Rscript -e \u0026quot;install.packages('xaringan', repos='http://cran.us.r-project.org')\u0026quot;  Rscript -e \u0026quot;rmarkdown::render('revealjs.Rmd', output_file = 'r/revealjs-r.html')\u0026quot; Rscript -e \u0026quot;rmarkdown::render('xaringan.Rmd', output_file = 'r/xaringan.html')\u0026quot;  Examples of HTML slides created using RStudio or the rmarkdown R package:  ioslides slidy revealjs xaringan  Create HTML slides from ipynb using nbconvert from the command-line You can also create slides from a Jupyter Notebook using jupyter nbconvert.\nIf you have Anaconda installed, you should already be able to run jupyter nbconvert, but if you are using Miniconda you will need to install nbconvert by running conda install -yc conda-forge jupyter nbconvert.\nurl=\u0026quot;https://cdnjs.cloudflare.com/ajax/libs/reveal.js/3.5.0\u0026quot; jupyter nbconvert revealjs.ipynb --to slides --reveal-prefix=$url  An example with instructions for creating slides in JupyterLab:  revealjs  Exporting slides from JupyterLab does not work (great) right now. It requires some additional setup. I would not recommend trying it until the next version of jupyter nbconvert comes out.\nLuckily, there are other ways to make slides from a Jupyter Notebook.\n The easiest way is to use nbviewer, so that you can switch between notebook and slide view. Another approach is to use binder for interactive notebooks/slideshows.  These two options are not the same as creating an html slideshow from a jupyter notebook and hosting it on your website, but they get the job done.\n",
    "date": 1461124800,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1515819600,
    "objectID": "279b9966ca9cf3121ce924dca452bb1c",
    "permalink": "/post/getting-started/",
    "publishdate": "2016-04-20T00:00:00-04:00",
    "relpermalink": "/post/getting-started/",
    "section": "post",
    "summary": "Create a beautifully simple slide deck in minutes. :rocket:",
    "tags": [
      "slides"
    ],
    "title": "Host HTML slides on GitHub pages",
    "type": "post"
  },
  {
    "authors": [
      "GA Cushen"
    ],
    "categories": null,
    "content": "More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n",
    "date": 1441080000,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1441080000,
    "objectID": "d77fa4a74076ffcd7ca6c21cfc27a4b2",
    "permalink": "/publication/person-re-id/",
    "publishdate": "2015-09-01T00:00:00-04:00",
    "relpermalink": "/publication/person-re-id/",
    "section": "publication",
    "summary": "Person re-identification is a critical security task for recognizing a person across spatially disjoint sensors. Previous work can be computationally intensive and is mainly based on low-level cues extracted from RGB data and implemented on a PC for a fixed sensor network (such as traditional CCTV). We present a practical and efficient framework for mobile devices (such as smart phones and robots) where high-level semantic soft biometrics are extracted from RGB and depth data. By combining these cues, our approach attempts to provide robustness to noise, illumination, and minor variations in clothing. This mobile approach may be particularly useful for the identification of persons in areas ill-served by fixed sensors or for tasks where the sensor position and direction need to dynamically adapt to a target. Results on the BIWI dataset are preliminary but encouraging. Further evaluation and demonstration of the system will be available on our website.",
    "tags": [],
    "title": "A Person Re-Identification System For Mobile Devices",
    "type": "publication"
  },
  {
    "authors": null,
    "categories": [
      "R"
    ],
    "content": " R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ",
    "date": 1437703994,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1437703994,
    "objectID": "10065deaa3098b0da91b78b48d0efc71",
    "permalink": "/post/2015-07-23-r-rmarkdown/",
    "publishdate": "2015-07-23T21:13:14-05:00",
    "relpermalink": "/post/2015-07-23-r-rmarkdown/",
    "section": "post",
    "summary": "R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.",
    "tags": [
      "R Markdown",
      "plot",
      "regression"
    ],
    "title": "Hello R Markdown",
    "type": "post"
  },
  {
    "authors": [
      "GA Cushen",
      "MS Nixon"
    ],
    "categories": null,
    "content": "More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n",
    "date": 1372651200,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1372651200,
    "objectID": "2b4d919e3cf73dfcd0063c88fe01cb00",
    "permalink": "/publication/clothing-search/",
    "publishdate": "2013-07-01T00:00:00-04:00",
    "relpermalink": "/publication/clothing-search/",
    "section": "publication",
    "summary": "We present a mobile visual clothing search system whereby a smart phone user can either choose a social networking photo or take a new photo of a person wearing clothing of interest and search for similar clothing in a retail database. From the query image, the person is detected, clothing is segmented, and clothing features are extracted and quantized. The information is sent from the phone client to a server, where the feature vector of the query image is used to retrieve similar clothing products from online databases. The phone's GPS location is used to re-rank results by retail store location. State of the art work focuses primarily on the recognition of a diverse range of clothing offline and pays little attention to practical applications. Evaluated on a challenging dataset, the system is relatively fast and achieves promising results.",
    "tags": [],
    "title": "Mobile visual clothing search",
    "type": "publication"
  },
  {
    "authors": null,
    "categories": null,
    "content": " Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n",
    "date": -62135596800,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": -62135596800,
    "objectID": "c2915ec5da95791851caafdcba9664af",
    "permalink": "/slides/example-slides/",
    "publishdate": "0001-01-01T00:00:00Z",
    "relpermalink": "/slides/example-slides/",
    "section": "slides",
    "summary": "Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$",
    "tags": null,
    "title": "Slides",
    "type": "slides"
  }
]